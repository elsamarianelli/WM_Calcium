function [mems] = get_odours_hipp(p,degree_overlap, overlap_control)
% Function to generate 3 lists of cells which will be activated by each odour
% with variable degree of overlap 

    % depnding on wether this is being used for CA1 or CA3 populaiton
    % generation the overlap can be set differently 
    if overlap_control == "OFF"
        overlap = p.f;
    elseif overlap_control == "ON"
        overlap = p.f_o;
    end

    %% memory input
    cells       = 1 : p.in;                   % List of all neurons
    mems        = cell(3,1);                  % Array of neurons in each memory
    pattern_order = {"A", "B", "C"};
    % generating seperate patterns for memory input 1 and 2 for 3 different
    % odours, order can be choses in function
    
    %pattern A
    num_overlap_cells = (overlap*p.in).*degree_overlap;
    cells       = cells(randperm(length(cells)));
    pattern_A   = sort(cells(1:overlap*p.in));
    cells(ismember(cells,pattern_A)) = [];
    % pattern B
    AB_overlap  = pattern_A(1:num_overlap_cells);
    cells       = cells(randperm(length(cells)));
    non_overlap = sort(cells(1:(overlap*p.in)-num_overlap_cells));
    pattern_B   = [AB_overlap, non_overlap];
    cells(ismember(cells,pattern_B)) = [];
    % pattern C 
    AC_overlap  = pattern_A(end-num_overlap_cells+1:end);
    BC_overlap  = pattern_B(end-num_overlap_cells+1:end);
    cells       = cells(randperm(length(cells)));
    non_overlap = sort(cells(1:int16((overlap*p.in)*(1-degree_overlap*2))));
    pattern_C   = [AC_overlap, BC_overlap, non_overlap];
    pattern_C   = unique(pattern_C);

    mems{1}     = pattern_A;
    mems{2}     = pattern_B;
    mems{3}     = pattern_C;


end
